star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = boolean()) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
if (out.sav == T) {
return(templist)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav,
) %>%
return()
}
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = NULL,
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
View(f.reg.multi.iv)
View(f.reg.multi)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "asdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
traceback()
gc()
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
library(broom)
library(GGally)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Clean environment
rm(list=ls())
### Import data created in dataset-creation.rmd
df <- read_rds("04. Outputs/2024-10-09_electiondataset.rds")
### Legend of variables (variable name x explanation of each variable)
legend_df <- sjlabelled::get_label(df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Data without labels (if necessary)
df_nolabel <- labelled::remove_labels(df)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
f.reg.multi.iv <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = boolean()) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
if (out.sav == T) {
return(templist)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav,
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
) %>%
pdata.frame(index = c("state_abv", "year"))
### Legend of variables (variable name x explanation of each variable)
legend_p.df <- sjlabelled::get_label(p.df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
# Data-check for DID
table(p.df$time)
table(p.df$judiciary_VAR)
table(p.df$judiciary_VAR[p.df$time == 1])
table(p.df$judiciary_VAR[p.df$time == 0])
table(p.df$interaction_judiciary)
# Manipulate Controls here
iv_control <- "log(vep_density) + log(state_unemploymentRate) + stateparty_control + log(lagged_vep) + log(vote_closeness)"
dv <- "log(vep_turnout_rate)"
iv <- c("interaction_court_action_none_count", "interaction_judiciary",  "interaction_judiciary_unfair", "interaction_judiciary_fair")
ctrl <- "log(vep_density) + log(state_unemploymentRate) + stateparty_control + log(lagged_vep) + log(vote_closeness)"
dv_label <- c("Voting-Eligible-Population Turnout Rate (Logged)")
cov_label <- c("Interaction(ANY Judicial Involvement X Time)",
"Interaction(NO Judicial Involvement X Time)",
"Interaction(Judicial Finding: UNFAIR Map X Time)",
"Interaction(Judicial Finding: FAIR Map X Time)",
"Voter Population Density (Logged)",
"State Unemployment Rate  (Logged)",
"State legislature control - DEM",
"State legislature control - REP",
"Vote Closeness of Candidates (Logged)",
"4-year-lagged Voter Turnout Rate (Logged)"
)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "asdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
outputs <- list()
outputs <- f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = NULL, cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = T)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "asdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
f.reg.multi.iv <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = boolean()) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
if (out.sav == T) {
return(templist)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "asdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
dv_label <- c("A", "B", "C", "D")
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
dv_label <- c("Model A", "Model B", "Model C", "Model D")
cov_label <- c("Interaction (ANY Judicial Involvement X Time)",
"Interaction (NO Judicial Involvement X Time)",
"Interaction (Judicial Finding: UNFAIR Map X Time)",
"Interaction (Judicial Finding: FAIR Map X Time)",
"Voter Population Density (Logged)",
"State Unemployment Rate  (Logged)",
"State legislature control - DEM",
"State legislature control - REP",
"Vote Closeness of Candidates (Logged)",
"4-year-lagged Voter Turnout Rate (Logged)"
)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
dv_label <- c("\nModel A", "\nModel B", "Model C", "Model D")
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
dv_label <- c("\n Model A", "\n Model B", "Model C", "Model D")
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
f.reg.multi.iv <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = boolean()) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
if (out.sav == T) {
return(templist)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav,
model.numbers = F
) %>%
return()
}
outputs <- f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = NULL, cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = T)
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
dv_label <- c("Model A", "Model B", "Model C", "Model D")
f.reg.multi.iv(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "Voting-Eligible-Population Turnout Rate (Logged)",
effect.sav = "twoways",
type.sav = "within",
dv_label.sav = dv_label, cov_label.sav = cov_label,
star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-did.html"),
out.sav = F)
