# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did.html")
)
# Check N & T
summary(lm(as.formula(paste0(dv, "~", iv)),
data = p.df
#, effect = "time",
#model = "within"
))
cov_label <- c("Contested Redistriction",
"Time",
"Interaction (Redistrict x Time)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did.html")
)
# Check N & T
summary(lm(as.formula(paste0(dv, "~", iv)),
data = p.df
#, effect = "time",
#model = "within"
))
test <- na.omit(p.df)
View(test)
### DID for pre-2016 and post-2016
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1),
#time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
interaction = time * redistrict_VAR,
)
### WITH polling data results
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "redistrict_VAR + time + interaction + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Contested Redistriction",
"Time",
"Interaction (Redistrict x Time)",
#"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did.html")
)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df
, effect = "time",
model = "within"
))
?summarize
### Quick t-test
ttest <- p.df %>%
t.test(avg_DEMvote_perc ~ redistrict_VAR, var.equal = FALSE)
### Quick t-test
ttest <- p.df %>%
t.test(log(avg_DEMvote_perc) ~ redistrict_VAR, var.equal = FALSE)
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1),
#time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
interaction = time * redistrict_VAR,
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR"))
?plm
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR"))
### WITH redistrict_VAR
p.df.red <- p.df %>%
mutate(interaction = time * redistrict_VAR)
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_VAR,
interaction_court_return_leg_count = time * court_return_leg_VAR,
interaction_court_challenge_rejected_count = time * court_challenge rejected_count_VAR,)
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_VAR,
interaction_court_return_leg_count = time * court_return_leg_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,)
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,)
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,)
### WITH redistrict_VAR
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "redistrict_VAR + time + interaction + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Contested Redistriction",
"Time",
"Interaction (Redistrict x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-redistrict.html")
)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df %>%
pdata.frame(index = c("state_abv", "year")) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(#democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
#republican_county_vote_perc = republican_county_vote / county_totalvotes,
#poll_perc =  polling_station / state_laborForce,
#state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")), [missing?]
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,)
### WITH redistrict_VAR
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "redistrict_VAR + time + interaction + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Contested Redistriction",
"Time",
"Interaction (Redistrict x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-redistrict.html")
)
### WITH redistrict_VAR
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "redistrict_VAR + time + interaction_redistrict + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Contested Redistriction",
"Time",
"Interaction (Redistrict x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-redistrict.html")
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-redistrict.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df
, effect = "twoway",
model = "within"
))
### WITH court_action_none_count
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
### WITH court_action_none_count
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "court_action_none_count + time + interaction_court_action_none_count_VAR + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("No Court Action",
"Time",
"Interaction (Cort x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-court-action.html")
)
iv <- "court_action_none_count + time + interaction_court_action_none_count + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("No Court Action",
"Time",
"Interaction (Cort x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-court-action.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df
, effect = "twoway",
model = "within"
))
### WITH court_map_drawn_count
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "court_map_drawn_count + time + interaction_court_map_drawn_count + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Court Drawn Map",
"Time",
"Interaction (Cort x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-court-action.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df
, effect = "twoway",
model = "within"
))
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "court_action_none_count + time + interaction_court_action_none_count + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("No Court Action",
"Time",
"Interaction (Cort x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-court-action.html")
)
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "court_map_drawn_count + time + interaction_court_map_drawn_count + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Court Drawn Map",
"Time",
"Interaction (Cort x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-court-draw.html")
)
