table(p.df$judiciary_VAR[p.df$time == 1])
table(p.df$judiciary_VAR[p.df$time == 0])
table(p.df$interaction_judiciary)
### Judiciary involvement (fair map) in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
# Using state fixed effect (individual) under PLM, but manually adding time control variables
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (manual).html")
)
View(legend_p.df)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + log(wealth_gini) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + log(wealth_gini) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + log(wealth_gini) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + log(wealth_gini) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + log(income_mean) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(income_mean) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(wealth_gini) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
# install.packages("usa")
library(here)
library(tidyverse)
library(stringi)
library(usa)
library(expss)
library(tidycensus)
### Import state-level wealth inequality
### https://www.openicpsr.org/openicpsr/project/192306/version/V4/view?path=/openicpsr/192306/fcr:versions/V4&type=project
IMPORT.wealth_ineq <- read_csv("02. Inputs/wealth inequality/state_wealth_inequality.csv")
View(IMPORT.wealth_ineq)
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Clean environment
rm(list=ls())
### Import data created in dataset-creation.rmd
df <- read_rds("04. Outputs/2024-10-09_electiondataset.rds")
### Legend of variables (variable name x explanation of each variable)
legend_df <- sjlabelled::get_label(df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Data without labels (if necessary)
df_nolabel <- labelled::remove_labels(df)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
f.reg.multi.iv <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
t.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
)
t_test_results <- t.df %>%
group_by(year) %>%
summarize(p_value = t.test(log(vep_turnout_rate) ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$stderr)
View(t_test_results)
t_test_results$diff <- t_test_results$estimate_treatment - t_test_results$estimate_control
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = year, y = diff)) +
geom_point() +
geom_vline(xintercept = 0, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-0.05,0.05), breaks = c(-0.05,-0.025,0,0.025, 0.05))+
scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = year, y = diff)) +
geom_point() +
geom_vline(xintercept = 0, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-0.05,0.05), breaks = c(-0.05,-0.025,0,0.025, 0.05))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = year, y = diff)) +
geom_point()
library(ggplot2)
ggplot(t_test_results, aes(x = year, y = diff)) +
geom_point()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 0, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-0.05,0.05), breaks = c(-0.05,-0.025,0,0.025, 0.05))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point()
t.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
)
t_test_results <- t.df %>%
group_by(year) %>%
summarize(p_value = t.test(log(vep_turnout_rate) ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$stderr)
t_test_results$diff <- t_test_results$estimate_treatment - t_test_results$estimate_control
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 0, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-0.05,0.05), breaks = c(-0.05,-0.025,0,0.025, 0.05))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 0, linetype = 2, alpha = 0.4)
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2012, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2)
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2012, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Day", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
t_test_results <- t.df %>%
group_by(year) %>%
summarize(p_value = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$stderr)
t_test_results <- t.df %>%
group_by(year) %>%
summarize(p_value = t.test(log(vep_turnout_rate - na.rm(lagged_vep)) ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(log(vep_turnout_rate - lagged_vep) ~ judiciary_VAR, var.equal = FALSE)$stderr)
t_test_results <- t.df %>%
mutate(vep_turnout_change = vep_turnout_rate-lagged_vep) %>% View()
t_test_results <- t.df %>%
mutate(vep_turnout_change = vep_turnout_rate-lagged_vep) %>%
group_by(year) %>%
summarize(p_value = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$stderr)
t_test_results$diff <- t_test_results$estimate_treatment - t_test_results$estimate_control
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
t_test_results <- t.df %>%
mutate(vep_turnout_change = log(vep_turnout_rate)-log(lagged_vep)) %>%
group_by(year) %>%
summarize(p_value = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$p.value,
estimate_control = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 0"],
estimate_treatment = t.test(vep_turnout_change ~ judiciary_VAR, var.equal = FALSE)$estimate["mean in group 1"],
stderr = t.test(vep_turnout_rate ~ judiciary_VAR, var.equal = FALSE)$stderr)
t_test_results$diff <- t_test_results$estimate_treatment - t_test_results$estimate_control
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
View(t_test_results)
t_test_results$diff <- exp(t_test_results$estimate_treatment - t_test_results$estimate_control)
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-10, 10), breaks = c(-5,0,5))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-0.1, 0.1), breaks = c(-0.05,0,0.05))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-2, 2), breaks = c(-1,0,1))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
t_test_results$diff <- t_test_results$estimate_treatment - t_test_results$estimate_control
t_test_results$cimin <- t_test_results$diff + t_test_results$stderr
t_test_results$cimax <- t_test_results$diff - t_test_results$stderr
ggplot(t_test_results, aes(x = as.numeric(year), y = diff)) +
geom_point() +
geom_vline(xintercept = 2010, linetype = 2, alpha = 0.4) +
geom_hline(yintercept = 0, linetype = 1, alpha = 0.7, colour = "red") +
geom_line() +
geom_errorbar(aes(ymin = cimin, ymax = cimax), width = 0.2) +
scale_y_continuous(limits = c(-2, 2), breaks = c(-1,0,1))+
#scale_x_discrete(limits = c(-5,-4,-3,-2,-1,0,1,2,3,4,5)) +
labs(x = "Year", y = "Difference in Means (Turnout Rate)",
title = "Redistriction : T-Test Difference in Means") +
theme_minimal()
