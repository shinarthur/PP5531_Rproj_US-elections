title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
# dep.var.labels = paste0(title.sav),
# dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Creating a function to run multiple regressions simultaneously
f.reg.single <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL) {
formula_str <- paste0(dv.sav, "~", iv.sav, "+", ctrl.sav)
model <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
stargazer(model,
type = starout,
report = "vc*sp",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
column.sep.width = "0pt",
float = FALSE,
header = FALSE,
no.space = TRUE,
font.size = "small",
# specific to this project
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title = "Effect of Redistricting on Party Choice in Presidential Elections"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Creating a function to run multiple regressions simultaneously
f.reg.single <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL) {
formula_str <- paste0(dv.sav, "~", iv.sav, "+", ctrl.sav)
model <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
stargazer(model,
type = starout,
report = "vc*sp",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
column.sep.width = "0pt",
float = FALSE,
header = FALSE,
no.space = TRUE,
font.size = "small",
# specific to this project
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title = "Effect of Redistricting on Party Choice in Presidential Elections\n"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections \n"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts \nper election cycle", "Polling station per pop (Log)", "Voter Eligible Population \nturnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts per election cycle", "Polling station per pop (Log)", "Voter Eligible Population turnout rate  (Log)", "Unemployment rate (Log)", "State Legislature - DEM", "State Legislature - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes (Log)", "REP % of County Votes (Log)")
cov_label <- c("Redistricting attempts per election cycle", "Polling station per pop (Log)", "Voting-Eligible-Population turnout rate  (Log)", "Unemployment rate (Log)", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
View(df)
View(df)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control_DEM", "State legislature control_REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control_DEM", "State legislature control_REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control_DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature controlDEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
, star.type = "html",
star.out = '05. Visualizations/regression-tbl.html'
)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of county votes (log)", "REP % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]", "Polling station to laborforce ratio (log) [county-level]", "Voting-Eligible-Population turnout rate (log) [state-level]", "Unemployment rate  (log) [county-level]", "State legislature control - DEM", "State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = "Effect of Redistricting on Party Choice in Presidential Elections"
# , star.type = "html",
# star.out = '05. Visualizations/regression-tbl.html'
)
