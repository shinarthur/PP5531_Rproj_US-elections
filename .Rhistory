val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
### WITHOUT polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-nopolling.html")
)
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
rm(list=ls())
df <- read_rds("04. Outputs/2024-09-26_electiondataset.rds")
legend <- df %>%
colnames() %>%
as.data.frame()
rm(list=ls())
df <- read_rds("04. Outputs/2024-09-26_electiondataset.rds")
legend <- df %>%
colnames() %>%
as.data.frame()
View(df)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")))
View(p.df)
?case_when
p.df$year[1]
p.df$year[1] > p.df$year[2]
p.df$year[1] == p.df$year[2]
int(p.df$year[1])
integer(p.df$year[1])
as.integer(p.df$year[1])
as.Date(o.df$year[1])
as.Date(p.df$year[1])
as.integer(p.df$year[2])
as.integer(p.df$year[3])
p.df$year[1] == as.factor("2000")
p.df$year[1] %in% c("2000")
p.df$year[1] %in% c("2002")
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012") ~ 0,
year %in% c("2016", "2020") ~ 1))
table(p.df$time)
table(na.omit(p.df$time))
p.df.2016 <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012") ~ 0,
year %in% c("2016", "2020") ~ 1))
p.df.2020 <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1))
table(p.df.2020$time)
table(p.df.2020$redistrict_count)
View(p.df.2020)
### DID for pre-2016 and post-2016
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012") ~ 0,
year %in% c("2016", "2020") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2016.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
### DID for pre-2020 and post-2020
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
### DID for pre-2016 and post-2016
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012") ~ 0,
year %in% c("2016", "2020") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2016.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
### DID for pre-2020 and post-2020
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
View(p.df)
### DID for pre-2020 and post-2020
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2020", "2012", "2016") ~ 1))
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + redistrict_count:time + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-placebo.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
typeof(p.df$redistrict_count)
typeof(p.df$time)
typeof(p.df$time:p.df$redistrict_count)
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1),
interaction = time * redistrict_count)
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + interaction + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
rm(list=ls())
df <- read_rds("04. Outputs/2024-09-26_electiondataset.rds")
legend <- df %>%
colnames() %>%
as.data.frame()
### DID for pre-2020 and post-2020
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012", "2016") ~ 0,
year %in% c("2020") ~ 1),
interaction = time * redistrict_count)
### WITH polling data results
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + time + interaction + log(polling_station) + log(vep_turnout_rate) + log(unemploymentRate) + state_party_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Redistricting attempts per election cycle [state-level]",
"T",
"Interaction (Redistrict x T)",
"Polling station per county (log)",
"Voting-Eligible-Population turnout rate (log) [state-level]",
"Unemployment rate  (log) [county-level]",
"State legislature control - DEM",
"State legislature control - REP")
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = cov_label,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did2020.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within"))
table(p.df$interaction)
### DID for pre-2016 and post-2016
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  polling_station / laborForce,
state_party_control = factor(state_party_control, levels = c("Split", "Democratic", "Republican")),
time = case_when(year %in% c("2000", "2004", "2008", "2012") ~ 0,
year %in% c("2016", "2020") ~ 1),
interaction = time * redistrict_count)
table(p.df$interaction)
