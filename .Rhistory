interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR) %>%
pdata.frame(index = c("state_abv", "year"))
p.df %>%
group_by(state_abv) %>%
select(year, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1,
TRUE ~ 1
)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1
)) %>%
View()
?rowwise()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var == 0 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1,
)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var = 0 ~ 0,
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var = 0 ~ 0,
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var == 0 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1,
)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var == 0 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1
)) %>%
View()
p.df %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
mutate(test_var = case_when(year_num < 2012 ~ 0,
year_num == 2012 & redistrict_var == 0 ~ 0,
year_num == 2012 & redistrict_VAR >= 1 ~ 1
)) %>%
View()
?lapply()
?mapply()
?filter()
p.df %>%
filter(year < 2012) %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
p.df %>%
filter(year_num < 2012) %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
p.df %>%
filter(year_num >= 2012) %>%
group_by(state_abv) %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
p.df %>%
select(year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
filter(year_num == 2012) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR")) %>%
filter(year_num == 2012) %>%
### Panel Data Frame for DID
p.df <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)
#, time = case_when(year %in% c("2016") ~ 0,
#                 year %in% c("2020") ~ 1),
) %>%
mutate(across(c(court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count),
~case_when(. >= 1 ~ 1,
. == 0 ~ 0),
.names = "{.col}_VAR")) %>%
mutate(interaction_redistrict = time * redistrict_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR) %>%
pdata.frame(index = c("state_abv", "year"))
df %>%
mutate(year_num = as.numeric(year)) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR")) %>%
filter(year_num == 2012) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR")) %>%
View()
treatedVAR.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR")) %>%
View()
treatedVAR.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR"))
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
select(year, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
select(year, year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
arrange(year_num) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR")) %>%
select(year, year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
arrange(state_abv, year_num) %>%
View()
?left_join()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all") %>%
select(year, year_num, state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
arrange(state_abv, year_num) %>%
View()
df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all") %>%
select(year, year_num, state_abv, redistrict_VAR_VAR, court_action_none_count_VAR, court_map_drawn_count_VAR, court_return_leg_count_VAR, court_challenge_rejected_count_VAR) %>%
arrange(state_abv, year_num) %>%
View()
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
treatedVAR.2012post.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.2012.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all")
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
?rbind()
?bind_rows()
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
treatedVAR.2012post.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.2012.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all")
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012)
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
View()
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012) %>%
select(-year_num)
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
View()
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012) %>%
select(year_num)
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR), ~case_when(is.na(.) ~ 0,
TRUE ~ .)) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
TRUE ~ .))) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
# mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
TRUE ~ .))) %>%
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
# mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
#                                                                                  TRUE ~ .))) %>%
View()
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
treatedVAR.2012post.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.2012.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all")
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012) %>%
select(year_num)
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
# mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
#                                                                                  TRUE ~ .))) %>%
View()
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012) %>%
select(year_num)
View(treatedVAR.2012pre.temp)
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012)
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
treatedVAR.2012post.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.2012.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all")
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
# mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
#                                                                                  TRUE ~ .))) %>%
View()
# Bind Rows
bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
TRUE ~ .))) %>%
View()
# Bind Rows
df_treated <- bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
TRUE ~ .)))
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
rm(list=ls())
df <- read_rds("04. Outputs/2024-10-03_electiondataset.rds")
treatedVAR.2012.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num == 2012) %>%
select(state_abv, redistrict_VAR, court_action_none_count, court_map_drawn_count, court_return_leg_count, court_challenge_rejected_count) %>%
rename_all(~paste0(., "_VAR"))
treatedVAR.2012post.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num >= 2012) %>%
left_join(treatedVAR.2012.temp, by = join_by("state_abv" == "state_abv_VAR"),
multiple = "all")
treatedVAR.2012pre.temp <- df %>%
mutate(year_num = as.numeric(year)) %>%
filter(year_num < 2012)
# Bind Rows
df_treated <- bind_rows(treatedVAR.2012post.temp, treatedVAR.2012pre.temp) %>%
arrange(state_abv, year_num) %>%
mutate(across(redistrict_VAR_VAR:court_challenge_rejected_count_VAR, ~case_when(is.na(.) ~ 0,
. >= 1 ~ 1,
TRUE ~ .)))
legend <- df_treated %>%
colnames() %>%
as.data.frame()
rm(treatedVAR.2012.temp, treatedVAR.2012post.temp, treatedVAR.2012pre.temp)
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Clean environment
rm(list=ls())
### Import data created in dataset-creation.rmd
df <- read_rds("04. Outputs/2024-10-07_electiondataset.rds")
### Legend of variables (variable name x explanation of each variable)
legend <- sjlabelled::get_label(df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Data without labels (if necessary)
df_nolabel <- labelled::remove_labels(df)
View(df)
temp.variable_list <- c("court_action_none_count_VAR", "court_map_drawn_count_VAR", "court_return_leg_count_VAR", "court_challenge_rejected_count_VAR", "judiciary_VAR")
temp.year_expression_list <- list(expr(year_num == 2012), expr(year_num >= 2012), expr(TRUE))
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df_treated %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR) %>%
pdata.frame(index = c("state_abv", "year"))
### Panel Data Frame for DID
p.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR) %>%
pdata.frame(index = c("state_abv", "year"))
### WITH judiciary_VAR
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)")
iv <- "judiciary_VAR * time + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
### WITH judiciary_VAR
dv <- c("log(avg_DEMvote_perc)", "log(avg_REPvote_perc)", "log(vep_turnout_rate)")
iv <- "judiciary_VAR * time + log(vep_turnout_rate) + log(state_unemploymentRate)"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)")
cov_label <- c("Any Judicial Actions towards Redistriction",
"Time",
"Interaction (Redistrict x Time)",
#"Polling station per county (log)", [excluded due to singularity issues]
"Voting-Eligible-Population turnout rate (log)",
"Unemployment rate  (log)"
#, "State legislature control - DEM",
#"State legislature control - REP"
)
# Title = Effect of Redistricting on Party Choice in Presidential Elections
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = ""
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-redistrict.html")
)
# Check N & T
summary(plm(as.formula(paste0(dv, "~", iv)),
data = p.df
, effect = "twoway",
model = "within"
))
