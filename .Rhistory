covariate.labels = cov_label.sav
) %>%
return()
}
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv[1]
f.reg.multi(dv = dv, iv = iv, dv_label.sav = dv_label)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year"))
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(log(county_totalvotes), 1)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv)
### Creating a function to run multiple regressions simultaneously
f.reg.single <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL) {
formula_str <- paste0(dv.sav, "~", iv.sav)
model <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
stargazer(model,
type = ifelse(knitr::is_latex_output(),"latex", "text"),
report = "vc*sp",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
column.sep.width = "0pt",
float = FALSE,
header = FALSE,
no.space = TRUE,
font.size = "small",
# specific to this project
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(log(county_totalvotes), 1)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv)
f.reg.single(dv.sav = dv, iv.sav = iv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(log(county_totalvotes), 1)"
f.reg.single(dv.sav = dv, iv.sav = iv)
model <- plm(as.formula(paste0(dv, "~", iv),
data = p.df,
effect = "time",
model = "within"))
?plm()
model <- plm(formula = as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
model <- plm(formula = as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(county_totalvotes, 1)"
model <- plm(formula = as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within")
?plm::lag
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(county_totalvotes, 4)"
model <- plm(formula = as.formula(paste0(dv, "~", iv)),
data = p.df,
effect = "time",
model = "within")
f.reg.single(dv.sav = dv, iv.sav = iv)
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(county_totalvotes), 4)"
f.reg.single(dv.sav = dv, iv.sav = iv)
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(democrat_county_vote), 4)"
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(democrat_county_vote), 4)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[3]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + plm::lag(log(republican_county_vote), 4)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv)
ctrl <- paste0("plm::lag(", dv, "4")
print(ctrl)
ctrl <- paste0("plm::lag(", dv, ", 4)")
print(ctrl)
### Creating a function to run multiple regressions simultaneously
f.reg.single <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL) {
formula_str <- paste0(dv.sav, "~", iv.sav, "+", ctrl.sav)
model <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav,
effect = effect.sav,
model = type.sav)
stargazer(model,
type = ifelse(knitr::is_latex_output(),"latex", "text"),
report = "vc*sp",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
column.sep.width = "0pt",
float = FALSE,
header = FALSE,
no.space = TRUE,
font.size = "small",
# specific to this project
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl)
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
View(legend)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + statecrime.rates.violent.all"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate) + log(statecrime.rates.violent.all)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "log(redistrict_count) + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "log(redistrict_count) + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
exp(-0.120)
exp(0.143)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
# iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate) + plm::lag(democrat_county_vote_perc, 4)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
# iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)""
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(polling_station) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- dv[3]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(log(", dv, "), 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(log(", dv, "), 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(log(", dv, "), 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("democrat_county_vote_perc)", "republican_county_vote_perc")
dv <- dv[2]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("democrat_county_vote_perc)", "republican_county_vote_perc")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("democrat_county_vote_perc", "republican_county_vote_perc")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
dv <- dv[1]
iv <- "redistrict_count + log(polling_station) + log(vep_turnout_rate)"
ctrl <- paste0("plm::lag(", dv, ", 4)")
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.single(dv.sav = dv, iv.sav = iv, ctrl.sav = ctrl, title = dv)
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc = polling_station / laborForce)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(unemploymentRate) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc = polling_station / laborForce)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
### Creating panel data dataframe
p.df <- df %>%
pdata.frame(index = c("idkey", "year")) %>%
mutate(democrat_county_vote_perc = democrat_county_vote / county_totalvotes,
republican_county_vote_perc = republican_county_vote / county_totalvotes,
poll_perc =  laborForce / polling_station)
# Using time fixed effects only, as the unbalanced panel data makes it problematic to run county fixed effect in addition
# dv <- c("log(county_totalvotes)", "log(democrat_county_vote)", "log(republican_county_vote)")
dv <- c("log(democrat_county_vote_perc)", "log(republican_county_vote_perc)")
iv <- "redistrict_count + log(poll_perc) + log(vep_turnout_rate)"
# dv_label <- c("TOTAL-CountyVotes", "D-CountyVotes", "REP-CountyVotes", "OTH-CountyVotes")
dv_label <- c("DEM % of County Votes", "REP % of County Votes")
# cov_labl <- c("Redistricting count", "No. of polling stations", "Unemployment rate", "VEP turnout rate")
f.reg.multi(dv.sav = dv, iv.sav = iv, dv_label.sav = dv_label, title = "Effect of Redistricting on ")
rm(list=ls())
library(here)
library(tidyverse)
library(stringi)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Import redistricting data
### https://redistricting.lls.edu/national-overview/?colorby=Plan%20Status&level=Congress&cycle=2020
df_redist <- read_csv("02. Inputs/StatesAndCyclesData_production-20240301a.csv")
View(df_redist)
