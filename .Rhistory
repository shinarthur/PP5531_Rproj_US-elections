)
### Assign to df_final
df_final <- df_final.temp3
legend <- sjlabelled::get_label(df_final) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Save dataset
# write.csv(df_final, file = paste0("04. Outputs/", today(), "_electiondataset.csv"))
saveRDS(df_final, file = paste0("04. Outputs/", today(), "_electiondataset.rds"))
rm(list=ls())
df <- read_rds("04. Outputs/2024-10-08_electiondataset.rds")
View(df)
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Clean environment
rm(list=ls())
### Import data created in dataset-creation.rmd
df <- read_rds("04. Outputs/2024-10-08_electiondataset.rds")
### Legend of variables (variable name x explanation of each variable)
legend_df <- sjlabelled::get_label(df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Data without labels (if necessary)
df_nolabel <- labelled::remove_labels(df)
temp.variable_list <- c("court_action_none_count_VAR", "court_map_drawn_count_VAR", "court_return_leg_count_VAR", "court_challenge_rejected_count_VAR", "judiciary_VAR", "judiciary_unfair_map_VAR", "judiciary_fair_map_VAR")
temp.year_expression_list <- list(expr(year_num == 2012), expr(year_num >= 2012), expr(TRUE))
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
) %>%
pdata.frame(index = c("state_abv", "year"))
### Legend of variables (variable name x explanation of each variable)
legend_p.df <- sjlabelled::get_label(p.df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
# Data-check for DID
table(p.df$time)
table(p.df$judiciary_VAR)
table(p.df$judiciary_VAR[p.df$time == 1])
table(p.df$judiciary_VAR[p.df$time == 0])
table(p.df$interaction_judiciary)
View(temp.year_expression_list)
### Cleanwork space
rm(list = grep("temp", ls(), value = TRUE))
f.data.check <- function(temp.year_expression_list = temp.year_expression_list, temp.variable_list = temp.variable_list){
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
}
f.data.check()
temp.variable_list <- c("court_action_none_count_VAR", "court_map_drawn_count_VAR", "court_return_leg_count_VAR", "court_challenge_rejected_count_VAR", "judiciary_VAR", "judiciary_unfair_map_VAR", "judiciary_fair_map_VAR")
temp.year_expression_list <- list(expr(year_num == 2012), expr(year_num >= 2012), expr(TRUE))
f.data.check <- function(temp.year_expression_list = temp.year_expression_list, temp.variable_list = temp.variable_list){
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
}
f.data.check()
f.data.check(temp.year_expression_list, temp.year_expression_list)
f.data.check <- function(temp.year_expression_list = temp.year_expression_list, temp.variable_list = temp.variable_list, df = df){
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
}
f.data.check(temp.year_expression_list, temp.year_expression_list)
temp.variable_list <- c("court_action_none_count_VAR", "court_map_drawn_count_VAR", "court_return_leg_count_VAR", "court_challenge_rejected_count_VAR", "judiciary_VAR", "judiciary_unfair_map_VAR", "judiciary_fair_map_VAR")
temp.year_expression_list <- list(expr(year_num == 2012), expr(year_num >= 2012), expr(TRUE))
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
### Cleanwork space
rm(list = grep("temp", ls(), value = TRUE))
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
) %>%
pdata.frame(index = c("state_abv", "year"))
### Legend of variables (variable name x explanation of each variable)
legend_p.df <- sjlabelled::get_label(p.df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
# Data-check for DID
table(p.df$time)
table(p.df$judiciary_VAR)
table(p.df$judiciary_VAR[p.df$time == 1])
table(p.df$judiciary_VAR[p.df$time == 0])
table(p.df$interaction_judiciary)
View(legend_p.df)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
# iv <- "judiciary_VAR + time + interaction_judiciary + log(gdp_state) + log(vep_density) + log(statecrime.rates.violent.all) + log(state_unemploymentRate)"
iv <- "interaction_judiciary + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
# iv <- "judiciary_VAR + time + interaction_judiciary + log(gdp_state) + log(vep_density) + log(statecrime.rates.violent.all) + log(state_unemploymentRate)"
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
# iv <- "judiciary_VAR + time + interaction_judiciary + log(gdp_state) + log(vep_density) + log(statecrime.rates.violent.all) + log(state_unemploymentRate)"
iv <- "interaction_judiciary_unfair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year) + log(vep_turnout_rate)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = NULL, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "-regression-tbl-polling-did-judicial.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair.html")
)
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/Findings_", today(), "/reg-tbl-did-judicial_fair.html")
)
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair.html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (manual).html")
)
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log) + as.factor(year)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
# , star.type = "html",
# star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
### Judiciary involvement in redistricting (time and state fixed effects)
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (manual).html")
)
### Judiciary involvement (fair map) in redistricting (time and state fixed effects)
dv <- c("avg_DEMvote_perc", "avg_REPvote_perc", "log(vep_turnout_rate)")
dv_label <- c("DEM candidate's % of county votes (log)", "REP candidate's % of county votes (log)", "Voting-Eligible-Population turnout rate (log)")
iv <- "interaction_judiciary_fair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (twoway).html")
)
# Using state fixed effect (individual) under PLM, but manually adding time control variables
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_fair (manual).html")
)
################################################################################
### Judiciary involvement (unfair map) in redistricting (time and state fixed effects)
iv <- "interaction_judiciary_unfair + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_unfair (twoway).html")
)
# Using state fixed effect (individual) under PLM, but manually adding time control variables
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_unfair (manual).html")
)
################################################################################
### Judiciary involvement (ANY) in redistricting (time and state fixed effects)
iv <- "interaction_judiciary + log(vep_density) + log(violent_crime) + log(state_unemploymentRate) + stateparty_control + as.factor(year)"
# Using time and state fixed effect (twoways) under PLM
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "twoways",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_ANY (twoway).html")
)
# Using state fixed effect (individual) under PLM, but manually adding time control variables
f.reg.multi(dv.sav = dv, iv.sav = iv,
dv_label.sav = dv_label, cov_label.sav = NULL,
title.sav = "",
effect.sav = "individual",
type.sav = "within"
, star.type = "html",
star.out = paste0("05. Visualizations/", today(), "/reg-tbl-did-judicial_ANY (manual).html")
)
