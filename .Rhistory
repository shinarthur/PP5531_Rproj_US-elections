labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
# Save visualization
f.ggsave(name = "CoeffViz_All",
width.sav = 16,
height.sav = 12,
output.type = "jpg")
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D"))) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
)
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D"))) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
)
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
)+
format_coef
format_coef <- geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
theme_ipsum_rc(base_size = 30)+
theme(plot.title = element_text(size = 50, lineheight = 0.55, hjust = 0.5),
plot.subtitle = element_text(size = 30, color = "#939198", hjust = 0.5),
axis.title.x = element_text(size = 30, hjust = 0.5),
axis.title.y = element_text(size = 30, hjust = 0.5),
axis.text = element_text(lineheight = 0.55),
plot.caption = element_text(size = 30, hjust=0),
legend.title = element_blank(),
legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(grepl("interaction", term)) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
)
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D")))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) #%>%
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D"))) %>%
```
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D"))) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) #%>%
### Save formatting
format_coef <- geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
### Save formatting
format_coef <-
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2)
### Join tidy data
all_models <- bind_rows(tidyout_NONE, tidyout_ANY, tidyout_UNFAIR, tidyout_FAIR) %>%
mutate(model = factor(model, levels = c("Model A", "Model B", "Model C", "Model D")))
### Save formatting
format_coef <-
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2)
################################################################################
### Creating Coefficient Plot (Interaction ONLY)
all_models %>%
filter(grepl("interaction", term)) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
# Save visualization
f.ggsave(name = "CoeffViz_Interaction",
width.sav = 16,
height.sav = 12,
output.type = "jpg")
################################################################################
### Creating Coefficient Plot (ALL variables)
all_models %>%
# filter(term %in% c("log(vep_density)", "")) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
# Save visualization
f.ggsave(name = "CoeffViz_All",
width.sav = 16,
height.sav = 12,
output.type = "jpg")
all_models %>%
filter(term %in% c("log(vep_density)", "log(state_unemploymentRate)", "log(lagged_vep)")) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(!term %in% c("log(vep_density)", "log(state_unemploymentRate)", "log(lagged_vep)")) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map "
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
# Save visualization
f.ggsave(name = "CoeffViz_partial",
width.sav = 16,
height.sav = 12,
output.type = "jpg")
all_models %>%
filter(!term %in% c("log(vep_density)", "log(state_unemploymentRate)", "log(lagged_vep)")) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map ",
`stateparty_controlDEM` = "State Legislature Control:\nDemocrats",
`stateparty_controlREP` = "State Legislature Control:\nRepublicans"
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
all_models %>%
filter(!term %in% c("log(vep_density)", "log(state_unemploymentRate)", "log(lagged_vep)")) %>%
dwplot(model_order = c("Model A", "Model B", "Model C", "Model D"),
ci = 0.90,
dot_args = list(size = 3),
whisker_args = list(size = 1.5)
) %>%
relabel_predictors(c(`interaction_court_action_none_count` = "Interaction Term (Treatment x Time):\nNo court involvement ",
`interaction_judiciary` = "Interaction Term (Treatment x Time):\nANY court involvement ",
`interaction_judiciary_unfair` = "Interaction Term (Treatment x Time):\nCourt finding - Unconstitutional map ",
`interaction_judiciary_fair` = "Interaction Term (Treatment x Time):\nCourt finding - Constitutional map ",
`stateparty_controlDEM` = "State Legislature Control:\nDemocrats",
`stateparty_controlREP` = "State Legislature Control:\nRepublicans",
`log(vote_closeness)` = "Closeness of Votes Between Candidates\n(Logged percentage)"
))+
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
labs(title = "Effects on Logged Voter Turnout Rates By \nJudicial Involvements in Redistricting (90% CI)",
subtitle = "Results from multivariate regression models using time and state fixed effects",
x = "\nCoefficient Estimates"
) +
format2+
theme(legend.key.size = unit(2, "cm"),
panel.border = element_rect(colour = "black", fill=NA))
# Save visualization
f.ggsave(name = "CoeffViz_partial",
width.sav = 16,
height.sav = 12,
output.type = "jpg")
# install.packages("here")
# install.packages("tidyverse")
# install.packages("plm")
# install.packages("stargazer")
# install.packages("readxl")
# install.packages("labelled")
# install.packages("sjlabelled")
library(here)
library(tidyverse)
library(plm)
library(stargazer)
library(readxl)
library(labelled)
library(sjlabelled)
library(broom)
library(GGally)
### Change directory here.
### As long as file structure is same as github structure, directory does not need to be changed.
knitr::opts_knit$set(root.dir = here::here())
### Clean environment
rm(list=ls())
### Import data created in dataset-creation.rmd
df <- read_rds("04. Outputs/2024-10-09_electiondataset.rds")
### Legend of variables (variable name x explanation of each variable)
legend_df <- sjlabelled::get_label(df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
### Data without labels (if necessary)
df_nolabel <- labelled::remove_labels(df)
temp.variable_list <- c("court_action_none_count_VAR", "court_map_drawn_count_VAR", "court_return_leg_count_VAR", "court_challenge_rejected_count_VAR", "judiciary_VAR", "judiciary_unfair_map_VAR", "judiciary_fair_map_VAR")
temp.year_expression_list <- list(expr(year_num == 2012), expr(year_num >= 2012), expr(TRUE))
for(year.sel in temp.year_expression_list){
print(as_label(year.sel))
for(val in temp.variable_list){
df %>%
filter(!!year.sel) %>%
select(paste0(val)) %>%
table() %>%
print()
}
}
### Cleanwork space
rm(list = grep("temp", ls(), value = TRUE))
### Creating a function to run multiple regressions simultaneously
f.reg.multi <- function(dv.sav = dv,
iv.sav = iv,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL) {
templist <- list()
for (i in 1:length(dv.sav)){
val <- dv.sav[[i]]
formula_str <- paste0(val, "~", iv.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
f.reg.multi.iv <- function(dv.sav = dv,
iv.sav = iv,
ctrl.sav = ctrl,
dataframe.sav = p.df,
title.sav = "testingasdf",
effect.sav = "time",
type.sav = "within",
dv_label.sav = NULL,
cov_label.sav = NULL,
index.sav = NULL,
star.type = ifelse(knitr::is_latex_output(),"latex", "text"),
star.out = NULL,
out.sav = boolean()) {
templist <- list()
for (i in 1:length(iv.sav)){
val <- iv.sav[[i]]
formula_str <- paste0(dv.sav, "~", val, "+", ctrl.sav)
templist[[i]] <- plm(as.formula(paste(formula_str, collapse = " ")),
data = dataframe.sav
, effect = effect.sav,
model = type.sav
, index = index.sav
)
}
if (out.sav == T) {
return(templist)
}
stargazer(templist,
type = star.type,
out = star.out,
report = "vc*sp",
title = "asdf",
dep.var.labels = paste0(title.sav),
dep.var.labels.include = T,
# column.sep.width = "0pt",
float = FALSE,
header = FALSE,
# no.space = TRUE,
font.size = "small",
column.labels = dv_label.sav,
covariate.labels = cov_label.sav
) %>%
return()
}
### Panel Data Frame for DID
p.df <- df %>%
filter(avg_DEMvote_perc > 0.0001 & avg_REPvote_perc > 0.0001) %>%
# filter(year_num >= 2004 & year_num <= 2016) %>%
mutate(time = case_when(year %in% c("2000", "2004", "2008") ~ 0,
year %in% c("2012", "2016", "2020") ~ 1)) %>%
mutate(stateparty_control = fct_relevel(stateparty_control, "SPLIT", "DEM", "REP")) %>%
mutate(interaction_judiciary = time * judiciary_VAR,
interaction_court_action_none_count = time * court_action_none_count_VAR,
interaction_court_map_drawn_count = time * court_map_drawn_count_VAR,
interaction_court_return_leg_count = time * court_return_leg_count_VAR,
interaction_court_challenge_rejected_count = time * court_challenge_rejected_count_VAR,
interaction_judiciary_unfair = time * judiciary_unfair_map_VAR,
interaction_judiciary_fair = time * judiciary_fair_map_VAR
) %>%
pdata.frame(index = c("state_abv", "year"))
### Legend of variables (variable name x explanation of each variable)
legend_p.df <- sjlabelled::get_label(p.df) %>%
as.data.frame() %>%
rownames_to_column(var = "variable") %>%
rename("label" = ".")
# Data-check for DID
table(p.df$time)
table(p.df$judiciary_VAR)
table(p.df$judiciary_VAR[p.df$time == 1])
table(p.df$judiciary_VAR[p.df$time == 0])
table(p.df$interaction_judiciary)
# Manipulate Controls here
iv_control <- "log(vep_density) + log(state_unemploymentRate) + stateparty_control + log(lagged_vep) + log(vote_closeness)"
View(legend_p.df)
View(legend_df)
